{"version":3,"sources":["components/AddPokemon.js","components/PokemonGridItem.js","helpers/getFetchPokemon.js","components/PokemonGrid.js","PokemonExpert.js","helpers/probando.js","components/TypePokemonItem.js","components/TypePokemon.js","components/AllPokemonGrid.js","components/AllPokemon.js","components/MenuPokemon.js","hooks/useFetchHooks.js","index.js"],"names":["AddPokemon","setPokemon","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","placeholder","value","onChange","target","PokemonGridItem","id","nombre","url","peso","tipo","alto","className","src","alt","getFetchPokemon","pokemon","a","encodeURI","fetch","resp","json","data","sprites","name","weight","height","other","officialArtwork","frontDefault","cero","types","nombreTipo","objeto","PokemonGrid","images","setImages","useEffect","then","key","PokemonExpert","prueba","map","probando","arreglo","i","newArreglo","push","TypePokemonItem","console","log","TypePokemon","example","getFetchTypes","pipa","filter","dato","undefined","imagenPokemon","document","querySelector","mundo","img","ReactDOM","render","onClick","AllPokemonGrid","AllPokemon","mostrarTodos","MenuPokemon","loading","state","setState","imgs","useFetchHooks","clasName","boton1","getElementById","boton2","boton3","prueba1","prueba2","prueba3","style","display"],"mappings":"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","file":"static/js/main.e96a5d9b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddPokemon = ({setPokemon}) => {\r\n\r\n    const [inputValue, setInputValue]=useState('');\r\n\r\n//destructuring al evento \r\nconst handleInputChange=({target})=>{\r\n    const {value}=target\r\n\r\n    setInputValue(value);\r\n\r\n}\r\n\r\nconst handleSubmit=(e)=>{\r\ne.preventDefault();\r\n\r\nif(inputValue.trim().length > 0){\r\n   // setPokemon(valor=>[inputValue,...valor]);\r\n   setPokemon([inputValue]);\r\n}\r\n\r\nsetInputValue('');\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n\r\n        <input \r\n        type=\"text\"\r\n        placeholder=\"Ingrese el número o el nombre de un pokemón\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n        />\r\n            \r\n        </form>\r\n    )\r\n}\r\n","import React,{ useState } from 'react'\r\n\r\n\r\nexport const PokemonGridItem = ({id,nombre,url,peso,tipo,alto}) => {\r\n\r\n\r\n\r\n\r\n\r\n  //  console.log({id,nombre})\r\n    return (\r\n\r\n\r\n\r\n        <div>\r\n         \r\n       {/* {img.title}*/}\r\n  \r\n        \r\n        <div  className={\r\n            \r\n            tipo==='grass'&& 'card  animate__animated animate__fadeIn grass' ||\r\n            tipo==='bug' && 'card  animate__animated animate__fadeIn bug' ||\r\ntipo==='dark' && 'card  animate__animated animate__fadeIn dark' || \r\ntipo==='dragon' && 'card  animate__animated animate__fadeIn dragon' || \r\ntipo==='electric' && 'card  animate__animated animate__fadeIn electric' ||\r\ntipo==='fairy' && 'card  animate__animated animate__fadeIn fairy' ||\r\ntipo==='fighting' && 'card  animate__animated animate__fadeIn fighting' ||\r\ntipo==='fire' && 'card  animate__animated animate__fadeIn fire' ||\r\ntipo==='ghost' && 'card  animate__animated animate__fadeIn ghost' ||\r\ntipo==='ground' && 'card  animate__animated animate__fadeIn ground' ||\r\ntipo==='ice' && 'card  animate__animated animate__fadeIn ice' ||\r\ntipo==='normal' && 'card  animate__animated animate__fadeIn normal' ||\r\ntipo==='poison' && 'card  animate__animated animate__fadeIn poison' ||\r\ntipo==='psychic' && 'card  animate__animated animate__fadeIn psychic' ||\r\ntipo==='rock' && 'card  animate__animated animate__fadeIn rock' ||\r\ntipo==='steel' && 'card  animate__animated animate__fadeIn steel' ||\r\ntipo==='water' && 'card  animate__animated animate__fadeIn water'\r\n\r\n           \r\n\r\n             \t\t\t\r\n\r\n           \t\t\r\n\t\t\r\n\r\n\r\n            \r\n        } >\r\n     \r\n        <img src={ url } alt={ nombre } />\r\n       \r\n        <p className=\"transformadora\">{ nombre } </p>\r\n       \r\n        </div>\r\n    \r\n        <div  className=\"card sizeCard animate__animated animate__fadeIn flotar  \">\r\n        <p>id: {id} </p>\r\n            <p>Peso: {peso} kg</p>\r\n            <p>Tipo: {tipo}</p>\r\n            <p>Alto: {alto} cm</p>\r\n        </div>\r\n      \r\n            \r\n   \r\n        </div>\r\n    )\r\n}\r\n","export const getFetchPokemon=async (pokemon)=>{\r\n\r\n    const url=`https://pokeapi.co/api/v2/pokemon/${encodeURI(pokemon)}`\r\n\r\n\r\n    let resp= await fetch(url);\r\n   let data= await resp.json();\r\n   \r\n   let {sprites,id,name, weight,height}=await data\r\n   const {other} = sprites\r\n   const {'official-artwork':officialArtwork}=other\r\n   const {'front_default':frontDefault}=officialArtwork\r\n   const {'0':cero}=data.types;\r\n  \r\n   const {name: nombreTipo}=cero.type\r\n  \r\n  // console.log(data);\r\n   \r\nconst objeto={\r\n    id:id,\r\n    nombre:name,\r\n    url:frontDefault,\r\n    tipo:nombreTipo,\r\n    peso:weight/10,\r\n    alto:height*10,\r\n\r\n}\r\n\r\n  return objeto\r\n\r\n\r\n  \r\n\r\n\r\n\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { PokemonGridItem } from './PokemonGridItem';\r\nimport {getFetchPokemon} from '../helpers/getFetchPokemon'\r\n\r\nexport const PokemonGrid = ({pokemon}) => {\r\n\r\n    const [images, setImages]=useState([]);\r\n    const [prueba, setPrueba]=useState([]);\r\n\r\n\r\n  useEffect(()=>{\r\n\r\n    getFetchPokemon(pokemon)\r\n    .then(setImages)\r\n  \r\n  \r\n \r\n \r\n  \r\n},[pokemon])\r\n\r\n   \r\n\r\n\r\n  /*  const getTipo=async(numero)=>{\r\n    const url=`https://pokeapi.co/api/v2/pokemon/${encodeURI(numero)}`\r\n\r\n    let resp= await fetch(url);\r\n   let data= await resp.json();\r\n   const {'0':cero}=data.types;\r\n  \r\n   const {name: nombreTipo}=cero.type\r\n\r\n   console.log(nombreTipo);\r\n   }\r\n\r\n  for(let i=1;i<=807;i++){\r\n      getTipo(i)\r\n  }\r\n\r\n */\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n       {/*  <h3>{images.nombre}</h3> */}\r\n        <div className=\"card-grid\">\r\n           {\r\n                  <PokemonGridItem \r\n                    key={images.id}\r\n                    {...images}\r\n                  />\r\n                    \r\n           }\r\n         \r\n        </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React ,{ useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AddPokemon } from './components/AddPokemon'\r\nimport { PokemonGrid } from './components/PokemonGrid'\r\n\r\n\r\nconst PokemonExpert = ({prueba}) => {\r\n\r\n    const [pokemon, setPokemon]=useState([])\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n        <h2 className=\"subti\">PokeBúsqueda</h2>\r\n        <AddPokemon setPokemon={ setPokemon } />\r\n        <hr />\r\n        <div className='mundial'>\r\n        <ol>\r\n            {\r\n                pokemon.map((pokemon)=>(\r\n                   <PokemonGrid \r\n                   key={ pokemon }\r\n                   pokemon= { pokemon }\r\n\r\n                   />\r\n                ))\r\n            }\r\n        </ol>\r\n        </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nPokemonExpert.propTypes = {\r\n\r\n}\r\n\r\nexport default PokemonExpert\r\n","export const probando=async()=>{\r\n\r\n    const arreglo=[]\r\n    for(let i=1;i<=721;i++){\r\n        const url=`https://pokeapi.co/api/v2/pokemon/${encodeURI(i)}`\r\n        let resp= await fetch(url);\r\n        let data= await resp.json();\r\n        let {sprites,id,name, weight,height}=await data\r\n        const {other} = sprites\r\nconst {'official-artwork':officialArtwork}=other\r\nconst {'front_default':frontDefault}=officialArtwork\r\nconst {'0':cero}=data.types;\r\n\r\nconst {name: nombreTipo}=cero.type\r\n        const newArreglo={\r\n            id:id,\r\n            nombre:name,\r\n            url:frontDefault,\r\n            tipo:nombreTipo,\r\n            peso:weight/10,\r\n            alto:height*10,\r\n            }\r\n            arreglo.push(newArreglo);\r\n        }\r\n    return arreglo\r\n        \r\n    }","import React from 'react'\r\nimport { PokemonGridItem } from './PokemonGridItem'\r\n\r\nexport const TypePokemonItem = ({id,nombre,url,peso,tipo,alto}) => {\r\n\r\nconsole.log(nombre, peso,alto, id) \r\n    return (\r\n        <div>\r\n       \r\n         \r\n        {/* {img.title}*/}\r\n        <div className=\"divPrincipal1\">\r\n         \r\n         <div  className={\r\n             \r\n             tipo==='grass'&& 'card1  animate__animated animate__fadeIn grass' ||\r\n             tipo==='bug' && 'card1  animate__animated animate__fadeIn bug' ||\r\n tipo==='dark' && 'card1 animate__animated animate__fadeIn dark' || \r\n tipo==='dragon' && 'card1  animate__animated animate__fadeIn dragon' || \r\n tipo==='electric' && 'card1  animate__animated animate__fadeIn electric' ||\r\n tipo==='fairy' && 'card1  animate__animated animate__fadeIn fairy' ||\r\n tipo==='fighting' && 'card1  animate__animated animate__fadeIn fighting' ||\r\n tipo==='fire' && 'card1 animate__animated animate__fadeIn fire' ||\r\n tipo==='ghost' && 'card1  animate__animated animate__fadeIn ghost' ||\r\n tipo==='ground' && 'card1  animate__animated animate__fadeIn ground' ||\r\n tipo==='ice' && 'card1 animate__animated animate__fadeIn ice' ||\r\n tipo==='normal' && 'card1  animate__animated animate__fadeIn normal' ||\r\n tipo==='poison' && 'card1  animate__animated animate__fadeIn poison' ||\r\n tipo==='psychic' && 'card1  animate__animated animate__fadeIn psychic' ||\r\n tipo==='rock' && 'card1  animate__animated animate__fadeIn rock' ||\r\n tipo==='steel' && 'card1  animate__animated animate__fadeIn steel' ||\r\n tipo==='water' && 'card1  animate__animated animate__fadeIn water'\r\n \r\n            \r\n \r\n                          \r\n \r\n                    \r\n         \r\n \r\n \r\n             \r\n         } >\r\n      \r\n         <img src={ url } alt={ nombre } />\r\n        \r\n         <p className=\"transformadora\">{ nombre } </p>\r\n        \r\n         </div>\r\n         </div>\r\n     \r\n     {/*     <div  className=\"card  animate__animated animate__fadeIn flotar  \">\r\n         <p>id: {id} </p>\r\n             <p>Peso: {peso} kg</p>\r\n             <p>Tipo: {tipo}</p>\r\n             <p>Alto: {alto} cm</p>\r\n         </div> */}\r\n       \r\n             \r\n    \r\n         </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { PokemonGridItem } from './PokemonGridItem';\r\nimport { probando } from '../helpers/probando';\r\n/* import PropTypes from 'prop-types'; */\r\nimport { TypePokemonItem } from './TypePokemonItem';\r\n\r\n\r\nexport const TypePokemon = ({example}) => {\r\n\r\nconst [type,setType]=useState(example)\r\n//['bug','dark','dragon','electric','fairy','fighting','fire','ghost','grass','ground','ice','normal','poison','psychic','rock','steel','water']\r\n\r\n/* const getFetchTypes=(e)=>{\r\ncojudo=e.target.value\r\n    console.log(cojudo);\r\n}\r\n\r\n */\r\n\r\n \r\n/*  useEffect(()=>{\r\n    \r\n    probando()\r\n     .then(setType) \r\n     console.log(type);\r\n },[])  \r\n */\r\n const getFetchTypes=({target})=>{\r\n\r\n   //console.log(type);\r\n\r\n\r\n    const {value}=target;\r\n    const tipo1=type.map(({id,nombre,url,peso,tipo,alto})=>{\r\n        if(value === tipo){\r\n              return{\r\n                id:id,\r\n                nombre:nombre,\r\n                url:url,\r\n                tipo:tipo,\r\n                peso:peso/10,\r\n                alto:alto*10,\r\n              }\r\n         \r\n        }\r\n        \r\n    })\r\n  \r\n\r\n     const pipa=tipo1.filter((dato)=>{\r\n        return dato != undefined\r\n      });\r\n   \r\n console.log(pipa);\r\n    \r\n           \r\n   \r\n    \r\n  const imagenPokemon=document.querySelector('.imagenPokemon');\r\n\r\n \r\n        const mundo=  pipa.map(( img )=>\r\n        (<TypePokemonItem\r\n        key={img.id}\r\n       {...img} />))\r\n ReactDOM.render(mundo,imagenPokemon);  \r\n    \r\n\r\n   // console.log(value);\r\n      //    console.log(tipo1);\r\n     \r\n     // const imagenPoke=document.querySelector('.imagenPokemon');\r\n   \r\n     \r\n    \r\n }\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n<div className=\"divPrincipal\">\r\n            <input \r\n            className=\"tipo bug\"\r\n                type=\"submit\"\r\n                value=\"bug\"\r\n                onClick={getFetchTypes}\r\n               \r\n            />\r\n            <input \r\n            className=\"tipo dark\"\r\n                type=\"submit\"\r\n                value=\"dark\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo dragon\"\r\n                type=\"submit\"\r\n                value=\"dragon\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo electric\"\r\n                type=\"submit\"\r\n                value=\"electric\"\r\n                onClick={getFetchTypes}\r\n            />\r\n          \r\n            <input \r\n            className=\"tipo fairy\"\r\n                type=\"submit\"\r\n                value=\"fairy\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo fighting\"\r\n                type=\"submit\"\r\n                value=\"fighting\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo fire\"\r\n                type=\"submit\"\r\n                value=\"fire\"\r\n                onClick={getFetchTypes}\r\n            />\r\n             <input \r\n            className=\"tipo ghost\"\r\n                type=\"submit\"\r\n                value=\"ghost\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo grass\"\r\n                type=\"submit\"\r\n                value=\"grass\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo ground\"\r\n                type=\"submit\"\r\n                value=\"ground\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo ice\"\r\n                type=\"submit\"\r\n                value=\"ice\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo normal\"\r\n                type=\"submit\"\r\n                value=\"normal\"\r\n                onClick={getFetchTypes}\r\n            />\r\n                <input \r\n            className=\"tipo poison\"\r\n                type=\"submit\"\r\n                value=\"poison\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo psychic\"\r\n                type=\"submit\"\r\n                value=\"psychic\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo rock\"\r\n                type=\"submit\"\r\n                value=\"rock\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo steel\"\r\n                type=\"submit\"\r\n                value=\"steel\"\r\n                onClick={getFetchTypes}\r\n            />\r\n            <input \r\n            className=\"tipo water\"\r\n                type=\"submit\"\r\n                value=\"water\"\r\n                onClick={getFetchTypes}\r\n                \r\n            />\r\n            \r\n            </div>\r\n           \r\n            <div className=\"imagenPokemon card-grid\">\r\n           \r\n          \r\n         \r\n           </div>\r\n       \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n/* TypePokemon.propTypes={\r\n    probando: PropTypes.func.isRequired\r\n} */","import React from 'react'\r\nimport { PokemonGridItem } from './PokemonGridItem'\r\n\r\nexport const AllPokemonGrid = ({id,nombre,url,peso,tipo,alto}) => {\r\n\r\n console.log(nombre, peso,alto, id) \r\n    return (\r\n        <div>\r\n         \r\n        {/* {img.title}*/}\r\n        \r\n        <div className=\"divPrincipal1\">\r\n         \r\n         <div  className={\r\n             \r\n             tipo==='grass'&& 'card1  animate__animated animate__fadeIn grass' ||\r\n             tipo==='bug' && 'card1  animate__animated animate__fadeIn bug' ||\r\n tipo==='dark' && 'card1  animate__animated animate__fadeIn dark' || \r\n tipo==='dragon' && 'card1  animate__animated animate__fadeIn dragon' || \r\n tipo==='electric' && 'card1  animate__animated animate__fadeIn electric' ||\r\n tipo==='fairy' && 'card1  animate__animated animate__fadeIn fairy' ||\r\n tipo==='fighting' && 'card1  animate__animated animate__fadeIn fighting' ||\r\n tipo==='fire' && 'card1  animate__animated animate__fadeIn fire' ||\r\n tipo==='ghost' && 'card1  animate__animated animate__fadeIn ghost' ||\r\n tipo==='ground' && 'card1  animate__animated animate__fadeIn ground' ||\r\n tipo==='ice' && 'card1  animate__animated animate__fadeIn ice' ||\r\n tipo==='normal' && 'card1  animate__animated animate__fadeIn normal' ||\r\n tipo==='poison' && 'card1  animate__animated animate__fadeIn poison' ||\r\n tipo==='psychic' && 'card1  animate__animated animate__fadeIn psychic' ||\r\n tipo==='rock' && 'card1  animate__animated animate__fadeIn rock' ||\r\n tipo==='steel' && 'card1  animate__animated animate__fadeIn steel' ||\r\n tipo==='water' && 'card1  animate__animated animate__fadeIn water'\r\n \r\n            \r\n \r\n                          \r\n \r\n                    \r\n         \r\n \r\n \r\n             \r\n         } >\r\n      \r\n         <img src={ url } alt={ nombre } />\r\n        \r\n         <p className=\"transformadora\">{ nombre } </p>\r\n        \r\n         </div>\r\n         </div>\r\n     {/*     <div  className=\"card  animate__animated animate__fadeIn flotar  \">\r\n         <p>id: {id} </p>\r\n             <p>Peso: {peso} kg</p>\r\n             <p>Tipo: {tipo}</p>\r\n             <p>Alto: {alto} cm</p>\r\n         </div> */}\r\n       \r\n             \r\n    \r\n         </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom'\r\nimport { PokemonGridItem } from './PokemonGridItem';\r\nimport { probando } from '../helpers/probando';\r\n/* import PropTypes from 'prop-types'; */\r\nimport { TypePokemonItem } from './TypePokemonItem';\r\nimport { mostrarTodos } from '../helpers/mostrarTodos'\r\nimport { AllPokemonGrid } from './AllPokemonGrid';\r\n\r\n\r\nexport const AllPokemon = ({mostrarTodos}) => {\r\n\r\nconst [type,setType]=useState(mostrarTodos)\r\n//['bug','dark','dragon','electric','fairy','fighting','fire','ghost','grass','ground','ice','normal','poison','psychic','rock','steel','water']\r\n\r\n/* const getFetchTypes=(e)=>{\r\ncojudo=e.target.value\r\n    console.log(cojudo);\r\n}\r\n\r\n */\r\n\r\n/* \r\n useEffect(()=>{\r\n    \r\n    mostrarTodos()\r\n     .then(setType)\r\n     \r\n },[])  */\r\n\r\n/*  const getFetchTypes=({target})=>{\r\n \r\n    const {value}=target;\r\n    const tipo1=type.map(({id,nombre,url,peso,tipo,alto})=>{\r\n        if(value === tipo){\r\n              return{\r\n                id:id,\r\n                nombre:nombre,\r\n                url:url,\r\n                tipo:tipo,\r\n                peso:peso/10,\r\n                alto:alto*10,\r\n              }\r\n         \r\n        }\r\n        \r\n    })\r\n\r\n    const pipa=tipo1.filter((dato)=>{\r\n        return dato != undefined\r\n      });\r\n   \r\n  console.log(pipa);\r\n    \r\n\r\n  const imagenPokemon=document.querySelector('.imagenPokemon');\r\n\r\n \r\n        const mundo=  pipa.map(( img )=>\r\n        (<TypePokemonItem\r\n        key={img.id}\r\n       {...img} />))\r\n ReactDOM.render(mundo,imagenPokemon); \r\n    \r\n\r\n   // console.log(value);\r\n      //    console.log(tipo1);\r\n     \r\n     // const imagenPoke=document.querySelector('.imagenPokemon');\r\n   \r\n     \r\n    \r\n } */\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n\r\n            <div className=\"imagenPokemon card1-grid\">\r\n            {\r\n                type.map(( img )=>\r\n        (<AllPokemonGrid\r\n        key={img.id}\r\n       {...img} />))\r\n                    \r\n           }\r\n          \r\n         \r\n           </div>\r\n       \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n/* TypePokemon.propTypes={\r\n    probando: PropTypes.func.isRequired\r\n} */","import React, { useState, useEffect }from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { probando } from '../helpers/probando';\r\nimport { mostrarTodos } from '../helpers/mostrarTodos';\r\nimport PokemonExpert from '../PokemonExpert'\r\nimport { TypePokemon } from './TypePokemon';\r\nimport { AllPokemon } from './AllPokemon';\r\nimport { TypePokemonItem } from './TypePokemonItem';\r\nimport { useFetchHooks } from '../hooks/useFetchHooks';\r\n\r\nexport const MenuPokemon = ({prueba}) => {\r\n\r\n    //componente Pokemon expert\r\n    const [state, setstate] = useState(true);\r\n\r\n    /* const [example, setExample]=useState([])\r\n    console.log(example);\r\n\r\n    useEffect(()=>{\r\n    \r\n        probando()\r\n        .then(setExample)\r\n      \r\n    },[])  */\r\n    const {data:images,loading}= useFetchHooks();\r\n    console.log(images);\r\n    \r\n\r\n   const seleccionarPokemon=(e)=>{\r\n       \r\n       e.preventDefault();\r\n     //  setstate(!state);\r\n     const boton1 = document.getElementById('boton1');\r\n     const boton2 = document.getElementById('boton2');\r\n     const boton3 = document.getElementById('boton3');\r\n     const prueba1=document.querySelector('.prueba1')\r\n     const prueba2=document.querySelector('.prueba2')\r\n     const prueba3=document.querySelector('.prueba3')\r\n  \r\n     ReactDOM.render(<PokemonExpert />,prueba1)\r\n     if(boton1.style.display = 'block'){\r\n       boton2.style.display = 'block';\r\n        boton1.style.display = 'block';\r\n        boton3.style.display = 'block'; \r\n        prueba1.style.display= 'block';\r\n        prueba2.style.display= 'none';\r\n        prueba3.style.display= 'none';\r\n  } \r\n       \r\n    }\r\n\r\n\r\n    const mostrarTipos=()=>{\r\n       \r\n        const boton1 = document.getElementById('boton1');\r\n         const boton2 = document.getElementById('boton2');\r\n         const boton3 = document.getElementById('boton3');\r\n         const prueba1=document.querySelector('.prueba1')\r\n         const prueba2=document.querySelector('.prueba2')\r\n         const prueba3=document.querySelector('.prueba3')\r\n\r\n         ReactDOM.render( <TypePokemon example={ images } />,prueba2)\r\n     \r\n       \r\n        if(boton2.style.display == 'block'){\r\n             boton2.style.display = 'block';\r\n            boton1.style.display = 'block'; \r\n           prueba1.style.display= 'none';\r\n          boton3.style.display = 'block'; \r\n           prueba2.style.display= 'block';\r\n           prueba3.style.display= 'none';\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const ocultarPokemon=()=>{\r\n        const boton1 = document.getElementById('boton1');\r\n         const boton2 = document.getElementById('boton2');\r\n         const boton3 = document.getElementById('boton3');\r\n         const prueba1=document.querySelector('.prueba1')\r\n         const prueba2=document.querySelector('.prueba2')\r\n         const prueba3=document.querySelector('.prueba3')\r\n         ReactDOM.render( <AllPokemon mostrarTodos={ images } />,prueba3)\r\n        if(boton3.style.display = 'block'){\r\n        boton1.style.display = 'block';\r\n        boton3.style.display = 'block';\r\n        boton2.style.display = 'block'; \r\n        prueba1.style.display= 'none';\r\n        prueba2.style.display='none';\r\n        prueba3.style.display= 'block';\r\n     }\r\n \r\n}\r\n     \r\n\r\n    return (\r\n\r\n        <div>\r\n        { \r\n            //operador ternario, si el loading es true muestra 'Cargando' sino 'Data Cargada'\r\n            //loading ? 'Cargando...' : 'Data cargada'\r\n\r\n            //usamos &&(ampersand) and\r\n            loading && <p className=\"animate__animated animate__flash\">Cargando la BD de Pokemón ...</p>\r\n            //se utiliza flash para darle una animación de parpadeo\r\n            \r\n            \r\n            }\r\n\r\n        <div className=\"principal \">\r\n            <div clasName=\"contenedor \">\r\n                <div className=\"listas \">\r\n              \r\n                    <div className=\"cambio\">\r\n                    <button \r\n        id=\"boton1\"\r\n        className=\"bg-teal-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n        onClick={seleccionarPokemon}>Buscar por número o Pokemón</button>\r\n                    </div>\r\n                    <div className=\"cambio\">\r\n                    <button \r\n        id=\"boton2\"\r\n        className=\"bg-teal-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n        onClick={mostrarTipos}>Buscar por tipo</button>\r\n                    </div>\r\n                    <div className=\"cambio\">\r\n                    <button \r\n       id=\"boton3\"\r\n       className=\"bg-teal-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n       onClick={ocultarPokemon}>Mostrar todos</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n       \r\n\r\n        </div>\r\n        \r\n        <div className='prueba2'></div>\r\n        <div className='prueba1'></div>\r\n        <div className='prueba3'></div>\r\n      \r\n        \r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { probando } from '../helpers/probando';\r\n\r\nexport const useFetchHooks = ( ) => {\r\n   \r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n//los efectos no pueden ser async\r\n//hace el efecto cuàndo cambia la categorìa\r\n  useEffect(() => {\r\n        //peticiòn http\r\n    probando()\r\n    //traemos las imàgenes\r\n        .then( imgs=>{\r\n          \r\n              //  console.log(imgs)\r\n                setState(\r\n                    {\r\n                        data:imgs,\r\n                        loading:false\r\n                    }\r\n                )\r\n\r\n       \r\n           \r\n        })\r\n\r\n\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /* setTimeout(()=>{\r\n\r\n        setState({\r\n            data:[1,2,3,4,5,6,7],\r\n            loading:false\r\n        })\r\n\r\n\r\n    },3000);\r\n */\r\n    //a los 3 segundos ejecuta lo que tiene adentro el setTimeout , que en este caso sería el setState con su valor\r\n\r\n\r\n\r\n    return state; // {data:[],loading:true}\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PokemonExpert from './PokemonExpert'\nimport './index.css';\nimport { MenuPokemon } from './components/MenuPokemon';\n\n\nReactDOM.render(\n\n    <MenuPokemon />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}